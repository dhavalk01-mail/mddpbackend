# version: '3' # docker-compose version
# services: # services which our app going to use. (list of containers we want to create)
#   mongo: # container name 
#     image: mongo # On which image container will build
#     ports:
#       - "27017:27017"
    
#   api-server:
#     image: api-server
#     ports:
#       - "9000:3000"
#     depends_on:
#       - mongo

# Enhanced Docker Compose File
version: '3.8' # docker-compose version
services: # services which our app going to use. (list of containers we want to create)
  mongo: # container name 
    container_name: mongoContainer
    image: mongo # which image container will build on
    # env_file: ./.env
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
    #   - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    # ports:
    #   - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    ports:
      - "27017:27017"
    networks: # adding network
      - mddp-backend-app
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  # mongo-express: # container name 
  #   container_name: mongo-express
  #   image: mongo-express # which image container will build on
  #   ports:
  #     - "8081:8081"
  #   networks: # adding network
  #     - mddp-backend-app

  mddp-api-server:
    # env_file: ./.env
    # ports:
    #   - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    # environment:
    #   - DB_HOST=mongodb
    #   - DB_USER=$MONGODB_USER
    #   - DB_PASSWORD=$MONGODB_PASSWORD
    #   - DB_NAME=$MONGODB_DATABASE
    #   - DB_PORT=$MONGODB_DOCKER_PORT
    build: . # build the Docker image for the service using the Dockerfile located in the current directory
    ports:
      - "4000:4000"
    networks: # adding network
      - mddp-backend-app
    depends_on:
      - mongoContainer

networks: # allow services to talk to each other while providing isolation from other docker container, running on the same host
  mddp-backend-app:
    driver: bridge

volumes: # enable persistence of database data across container restart
  mongo-data:
    driver: local


# Change connection String for MongoDB
# mongodb://mongoContainer:27017/mddpDB


# Run Application
# docker-compose up